spring.application.name=feature-service
server.port=8080
spring.config.import=optional:configserver:http://localhost:8888

management.endpoints.web.exposure.include=*

###### DB Configuration  #########
spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL
spring.datasource.username=sa
spring.datasource.password=

####### Flyway Migrations #########
spring.flyway.locations=classpath:/db/migration/h2
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

### App Configuration ###
ft.openapi.title=FeatureService API
ft.openapi.description=FeatureService API Swagger Documentation
ft.openapi.version=v1.0.0
ft.openapi.contact.name=SivaLabs
ft.openapi.contact.email=support@sivalabs.in
ft.events.new-features=new_features
ft.events.updated-features=updated_features
ft.events.deleted-features=deleted_features

####### OAuth2 Configuration  #########
OAUTH2_SERVER_URL=http://localhost:9191
REALM_URL=${OAUTH2_SERVER_URL}/realms/feature-tracker
spring.security.oauth2.resourceserver.jwt.issuer-uri=${REALM_URL}

######## Kafka Configuration  #########
KAFKA_BROKER=localhost:9092
spring.kafka.bootstrap-servers=${KAFKA_BROKER}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.consumer.properties.spring.json.trusted.packages=*
